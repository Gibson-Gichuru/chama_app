# api test run workflow

name: Application Testing Workflow

on:

  push:

    branches:

      - development

  pull_request:

    branches:

      - development

jobs:

  testingApi:

    runs-on: ubuntu-latest

    steps:

      - name: Checking out the repository
        uses: actions/checkout@v2

      - name: Building the application test network

        run: docker network create test-net

      - name: Building the application image

        run: docker build $(pwd)/api -t test_app -f $(pwd)/api/Dockerfile

      - name : Adding the application container to the test-net network

        run: |
        
          docker run -itd \
          -e FLASK_TEST_ENV='remote_testing' \
          -e SECRET_KEY=${{ SECRET_KEY }} \
          -e ACTIVATION_KEY = ${{ ACTIVATION_KEY }} \
          -e ACCESS_KEY = ${{ ACCESS_KEY }} \
          -e REFRESH_KEY = ${{ REFRESH_KEY }} \
          -e TOKEN_ALGO = ${{ REFRESH_KEY }} \
          -e REDIS_PASSWORD = ${{ REDIS_PASSWORD }} \
          --name api-test --network test-net test_app

      - name: setting up the redis container on the test-net network

        run: docker run -itd --name redis --network test-net redis

      - name: Running the Api unit tests

        run: docker exec -i api-test flask test 

  testingFrontEnd:

    runs-on: ubuntu-latest

    steps:

      - name: Checking out the repository
      
        uses: actions/checkout@v2

      - name: Setting up node js

        run: echo "Nodejs will be set up Sooon!!"
